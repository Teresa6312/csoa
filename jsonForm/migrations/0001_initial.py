# Generated by Django 5.0.9 on 2025-03-09 23:28

import django.core.validators
import django.db.models.deletion
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        ('userManagement', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FormSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField(default=0)),
                ('name', models.CharField(max_length=127)),
                ('description', models.CharField(blank=True, max_length=1023, null=True)),
                ('version', models.PositiveSmallIntegerField(default=0)),
                ('json_template', models.JSONField(help_text='JSON template for the form section validate with schema https://www.jsonschemavalidator.net/', max_length=1000)),
                ('json_template_schema', models.JSONField(blank=True, help_text='JSON template schema for the form section', max_length=1000, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_publish', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, max_length=511, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_submited', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('case_team_name', models.CharField(blank=True, max_length=127, null=True)),
                ('case_department_name', models.CharField(blank=True, max_length=127, null=True)),
                ('form_code', models.CharField(blank=True, max_length=15, null=True)),
                ('form_name', models.CharField(blank=True, max_length=127, null=True)),
                ('workflow_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by_name', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by_name', models.CharField(blank=True, max_length=300, null=True)),
                ('status', models.CharField(default='Initiated', max_length=255)),
                ('case_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_department', to='userManagement.department')),
                ('case_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_team', to='userManagement.team')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CaseData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_data', models.JSONField(default=dict)),
                ('form_section_name', models.CharField(blank=True, max_length=127, null=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='case_data_case', to='jsonForm.case')),
                ('form_section', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_form_section', to='jsonForm.formsection')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FormTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Start with letters, and only accepts letters (a-z, A-Z), numbers (0-9), dashes (-), and underscores (_).', regex='^[a-zA-Z][a-zA-Z0-9_]*$')])),
                ('name', models.CharField(max_length=127, unique=True)),
                ('description', models.CharField(max_length=1023)),
                ('backend_app_label', models.CharField(blank=True, max_length=63, null=True)),
                ('backend_app_model', models.CharField(blank=True, max_length=63, null=True)),
                ('backend_app_section_model', models.CharField(blank=True, max_length=63, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template_application', to='userManagement.appmenu')),
                ('owner_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template_owner_department', to='userManagement.company')),
                ('owner_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template_owner_department', to='userManagement.department')),
                ('owner_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template_owner_team', to='userManagement.team')),
                ('process_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template_process_department', to='userManagement.department')),
                ('process_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template_process_department', to='userManagement.team')),
                ('workflow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template_workflow', to='jsonForm.workflow')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='formsection',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='form_section_form_template', to='jsonForm.formtemplate'),
        ),
        migrations.AddField(
            model_name='case',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_form', to='jsonForm.formtemplate'),
        ),
        migrations.CreateModel(
            name='HistoricalCaseData',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('section_data', models.JSONField(default=dict)),
                ('form_section_name', models.CharField(blank=True, max_length=127, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('case', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jsonForm.case')),
                ('form_section', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jsonForm.formsection')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical case data',
                'verbose_name_plural': 'historical case datas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFormSection',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField(default=0)),
                ('name', models.CharField(max_length=127)),
                ('description', models.CharField(blank=True, max_length=1023, null=True)),
                ('version', models.PositiveSmallIntegerField(default=0)),
                ('json_template', models.JSONField(help_text='JSON template for the form section validate with schema https://www.jsonschemavalidator.net/', max_length=1000)),
                ('json_template_schema', models.JSONField(blank=True, help_text='JSON template schema for the form section', max_length=1000, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_publish', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jsonForm.formtemplate')),
            ],
            options={
                'verbose_name': 'historical form section',
                'verbose_name_plural': 'historical form sections',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWorkflow',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True, max_length=511, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical workflow',
                'verbose_name_plural': 'historical workflows',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=511, null=True)),
                ('index', models.PositiveSmallIntegerField(default=1, help_text='task order index start from 0, others default to 1')),
                ('task_type', models.CharField(choices=[('Auto', 'Manual (task to created task instance by user manually)'), ('Auto', 'Auto (task to created task instance by system workflow to auto detact the next task)'), ('Flow', 'Flow Task (task to created task instance by system workflow)')], default='Flow', max_length=31)),
                ('assign_to', models.ManyToManyField(blank=True, related_name='task_assign_to', to='userManagement.permission')),
                ('assign_to_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_assign_to_role', to='userManagement.customgroup')),
                ('assign_to_user', models.ForeignKey(blank=True, help_text='not in used', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_assign_to_user', to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_workflow', to='jsonForm.workflow')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalDecisionPoint',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('decision', models.CharField(max_length=255)),
                ('priority', models.PositiveSmallIntegerField(default=1, help_text='decision priority to determine the next task, 1 is the first priority. It is usefull if the task was assigned to multiple decision makers, if one rejected the case, and the whold case should be cancelled, then reject should be the highest priority')),
                ('condition', models.JSONField(blank=True, help_text='JSON-encoded string representing the condition for this decision point. Find the condition format in the  folder.', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('next_task', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jsonForm.task')),
                ('task', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jsonForm.task')),
            ],
            options={
                'verbose_name': 'historical decision point',
                'verbose_name_plural': 'historical decision points',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='DecisionPoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('decision', models.CharField(max_length=255)),
                ('priority', models.PositiveSmallIntegerField(default=1, help_text='decision priority to determine the next task, 1 is the first priority. It is usefull if the task was assigned to multiple decision makers, if one rejected the case, and the whold case should be cancelled, then reject should be the highest priority')),
                ('condition', models.JSONField(blank=True, help_text='JSON-encoded string representing the condition for this decision point. Find the condition format in the  folder.', null=True)),
                ('next_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decision_points_next_task', to='jsonForm.task')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decision_points_task', to='jsonForm.task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.CharField(blank=True, max_length=511, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by_name', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by_name', models.CharField(blank=True, max_length=300, null=True)),
                ('assign_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_assign_to', to='userManagement.permission')),
                ('assign_to_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_assign_to_user', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('decision_point', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_decision_point', to='jsonForm.decisionpoint')),
                ('files', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_files', to='base.filemodel')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_task', to='jsonForm.task')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='case',
            name='task_instances',
            field=models.ManyToManyField(related_name='case_task_instances', to='jsonForm.taskinstance'),
        ),
        migrations.CreateModel(
            name='HistoricalWorkflowInstance',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('is_active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jsonForm.workflow')),
            ],
            options={
                'verbose_name': 'historical workflow instance',
                'verbose_name_plural': 'historical workflow instances',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTask',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=511, null=True)),
                ('index', models.PositiveSmallIntegerField(default=1, help_text='task order index start from 0, others default to 1')),
                ('task_type', models.CharField(choices=[('Auto', 'Manual (task to created task instance by user manually)'), ('Auto', 'Auto (task to created task instance by system workflow to auto detact the next task)'), ('Flow', 'Flow Task (task to created task instance by system workflow)')], default='Flow', max_length=31)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assign_to_role', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='userManagement.customgroup')),
                ('assign_to_user', models.ForeignKey(blank=True, db_constraint=False, help_text='not in used', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jsonForm.workflow')),
            ],
            options={
                'verbose_name': 'historical task',
                'verbose_name_plural': 'historical tasks',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFormTemplate',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Start with letters, and only accepts letters (a-z, A-Z), numbers (0-9), dashes (-), and underscores (_).', regex='^[a-zA-Z][a-zA-Z0-9_]*$')])),
                ('name', models.CharField(db_index=True, max_length=127)),
                ('description', models.CharField(max_length=1023)),
                ('backend_app_label', models.CharField(blank=True, max_length=63, null=True)),
                ('backend_app_model', models.CharField(blank=True, max_length=63, null=True)),
                ('backend_app_section_model', models.CharField(blank=True, max_length=63, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('application', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='userManagement.appmenu')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner_company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='userManagement.company')),
                ('owner_department', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='userManagement.department')),
                ('owner_team', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='userManagement.team')),
                ('process_department', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='userManagement.department')),
                ('process_team', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='userManagement.team')),
                ('workflow', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jsonForm.workflow')),
            ],
            options={
                'verbose_name': 'historical form template',
                'verbose_name_plural': 'historical form templates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='WorkflowInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_workflow', to='jsonForm.workflow')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='taskinstance',
            name='workflow_instance',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_instance_workflow_instance', to='jsonForm.workflowinstance'),
        ),
        migrations.CreateModel(
            name='HistoricalTaskInstance',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('comment', models.CharField(blank=True, max_length=511, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by_name', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by_name', models.CharField(blank=True, max_length=300, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assign_to', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='userManagement.permission')),
                ('assign_to_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('decision_point', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jsonForm.decisionpoint')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jsonForm.task')),
                ('workflow_instance', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jsonForm.workflowinstance')),
            ],
            options={
                'verbose_name': 'historical task instance',
                'verbose_name_plural': 'historical task instances',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCase',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_submited', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('case_team_name', models.CharField(blank=True, max_length=127, null=True)),
                ('case_department_name', models.CharField(blank=True, max_length=127, null=True)),
                ('form_code', models.CharField(blank=True, max_length=15, null=True)),
                ('form_name', models.CharField(blank=True, max_length=127, null=True)),
                ('workflow_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by_name', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by_name', models.CharField(blank=True, max_length=300, null=True)),
                ('status', models.CharField(default='Initiated', max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('case_department', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='userManagement.department')),
                ('case_team', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='userManagement.team')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('form', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jsonForm.formtemplate')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('workflow_instance', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jsonForm.workflowinstance')),
            ],
            options={
                'verbose_name': 'historical case',
                'verbose_name_plural': 'historical cases',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='case',
            name='workflow_instance',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='case_workflow_instance', to='jsonForm.workflowinstance'),
        ),
        migrations.AddConstraint(
            model_name='formsection',
            constraint=models.UniqueConstraint(fields=('template', 'version', 'index'), name='unique form section version index template'),
        ),
        migrations.AddConstraint(
            model_name='formsection',
            constraint=models.UniqueConstraint(fields=('template', 'version', 'name'), name='unique form section version name template'),
        ),
        migrations.AddConstraint(
            model_name='decisionpoint',
            constraint=models.UniqueConstraint(fields=('task', 'decision'), name='unique  decision point task&decision'),
        ),
        migrations.AddConstraint(
            model_name='decisionpoint',
            constraint=models.UniqueConstraint(fields=('task', 'priority'), name='unique decision point task&priority'),
        ),
        migrations.AddConstraint(
            model_name='task',
            constraint=models.UniqueConstraint(fields=('workflow', 'name'), name='unique task workflow task name'),
        ),
        migrations.AddConstraint(
            model_name='task',
            constraint=models.UniqueConstraint(fields=('workflow', 'index'), name='unique task workflow task index'),
        ),
    ]
