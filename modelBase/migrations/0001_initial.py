# Generated by Django 5.0.6 on 2024-10-02 15:50

import django.core.validators
import django.db.models.deletion
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ModelDictionaryConfigModel',
            fields=[
                ('code', models.CharField(max_length=63, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Only accepts letters (a-z, A-Z), numbers (0-9), dashes (-), and underscores (_).', regex='^[a-zA-Z0-9_-]+$')])),
                ('description', models.CharField(max_length=511)),
                ('backend_app_label', models.CharField(max_length=127)),
                ('backend_app_model', models.CharField(max_length=127)),
                ('model_label', models.CharField(default='model', max_length=255)),
                ('pk_field_name', models.CharField(blank=True, default='id', max_length=63, null=True)),
                ('fk_fields', models.JSONField(blank=True, help_text='format [{"model": "model","field_name": "field_name","label": "label"}] ', max_length=511, null=True, verbose_name='Are FK fields in the table or other table with one to one or many to one relationship')),
                ('fk_multi_fields', models.JSONField(blank=True, help_text='format [{"model": "model","field_name": "field_name","label": "label"}]', max_length=511, null=True, verbose_name='As FK field in the table or other tables with one to many or manay to many relationship')),
                ('sub_tables', models.JSONField(blank=True, help_text='related table to create, display, or modify format [{"id_filter_name": "id_filter_name", "dictionary_code": "dictionary_code", "label": "label"}] ** id_filter_name should be the field name__id in the sub table model', max_length=511, null=True, verbose_name='related table to create, display, or modify')),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PendingRecordModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('backend_app_label', models.CharField(blank=True, max_length=127, null=True)),
                ('backend_app_model', models.CharField(blank=True, max_length=127, null=True)),
                ('model_pk', models.PositiveBigIntegerField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('record', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalModelDictionaryConfigModel',
            fields=[
                ('code', models.CharField(db_index=True, max_length=63, validators=[django.core.validators.RegexValidator(message='Only accepts letters (a-z, A-Z), numbers (0-9), dashes (-), and underscores (_).', regex='^[a-zA-Z0-9_-]+$')])),
                ('description', models.CharField(max_length=511)),
                ('backend_app_label', models.CharField(max_length=127)),
                ('backend_app_model', models.CharField(max_length=127)),
                ('model_label', models.CharField(default='model', max_length=255)),
                ('pk_field_name', models.CharField(blank=True, default='id', max_length=63, null=True)),
                ('fk_fields', models.JSONField(blank=True, help_text='format [{"model": "model","field_name": "field_name","label": "label"}] ', max_length=511, null=True, verbose_name='Are FK fields in the table or other table with one to one or many to one relationship')),
                ('fk_multi_fields', models.JSONField(blank=True, help_text='format [{"model": "model","field_name": "field_name","label": "label"}]', max_length=511, null=True, verbose_name='As FK field in the table or other tables with one to many or manay to many relationship')),
                ('sub_tables', models.JSONField(blank=True, help_text='related table to create, display, or modify format [{"id_filter_name": "id_filter_name", "dictionary_code": "dictionary_code", "label": "label"}] ** id_filter_name should be the field name__id in the sub table model', max_length=511, null=True, verbose_name='related table to create, display, or modify')),
                ('is_active', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical model dictionary config model',
                'verbose_name_plural': 'historical model dictionary config models',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalModelDictionaryItemsConfigModel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('backend_field_name', models.CharField(max_length=127)),
                ('field_label', models.CharField(max_length=255)),
                ('index', models.PositiveSmallIntegerField(verbose_name='index for field ordering')),
                ('add_fieldsets', models.BooleanField(default=False, verbose_name='fields for create records')),
                ('list_display', models.BooleanField(default=True, verbose_name='fields for display in list')),
                ('fieldsets', models.BooleanField(default=True, verbose_name='fields for display in details')),
                ('edit_fieldsets', models.BooleanField(default=False, verbose_name='fields for enable edit')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('dictionary', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='modelBase.modeldictionaryconfigmodel')),
            ],
            options={
                'verbose_name': 'historical model dictionary items config model',
                'verbose_name_plural': 'historical model dictionary items config models',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ModelDictionaryItemsConfigModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backend_field_name', models.CharField(max_length=127)),
                ('field_label', models.CharField(max_length=255)),
                ('index', models.PositiveSmallIntegerField(verbose_name='index for field ordering')),
                ('add_fieldsets', models.BooleanField(default=False, verbose_name='fields for create records')),
                ('list_display', models.BooleanField(default=True, verbose_name='fields for display in list')),
                ('fieldsets', models.BooleanField(default=True, verbose_name='fields for display in details')),
                ('edit_fieldsets', models.BooleanField(default=False, verbose_name='fields for enable edit')),
                ('dictionary', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dictionary_item_dictionary', to='modelBase.modeldictionaryconfigmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
